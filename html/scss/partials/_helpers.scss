// Typography:
$main-sans-serif: OpenSans, Helvetica, Arial, sans-serif;
$avenir-next-bold: AvenirNextBold, Helvetica, Arial, sans-serif;
$avenir-std: AvenirStd, Helvetica, Arial, sans-serif;
$avenir-next-regular: AvenirNextRegular, Helvetica, Arial, sans-serif;

$browser-context: 14px;
$base-line-height: 1.428571429;

// Colors.
$white: #FFF;
$black: #000;

$blue: #005da5;
$blue2: #2a4278;
$blue3: #003865;
$blue4: #00133F;

$grey: #4a5763;
$grey2: #F2F3F5;
$grey3: #A3A3A3;
$grey4: #e1e1e1;

$red: #FF3A3A;

$orange: #FF7135;

// Responsive breakpoints. "Include media" settings.
$breakpoints: (
  tablet: 768px,
  desktop: 960px
);

// Helper function to strip units.
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

// Pixels to em units function.
@function px-to-em($pixels, $context: $browser-context) {

  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1em;
}

// Pixels to rem units function.
@function px-to-rem($pixels, $context: $browser-context) {

  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1rem;
}

// Remove hover on touch devices:
@mixin hover() {

  .no-touchevents &:hover,
  .no-js &:hover,
  &:focus {
    @content;
  }
}
